@{
    ViewData["Title"] = "Privacy Policy";
}
<p>Use this page to detail your site's privacy policy.</p>
<h1>@ViewData["Title"]</h1>

@*<script src=" ../lib/jquery.js"></script>
  <script src="../src/jquery-ui-dependencies/jquery.fancytree.ui-deps.js"></script>

  <link href="../src/skin-win8/ui.fancytree.css" rel="stylesheet">
  <script src="../src/jquery.fancytree.js"></script>
  <script src="../src/jquery.fancytree.table.js"></script>
*@
  <link href="~/jquery.fancytree/skin-win8/ui.fancytree.css" rel="stylesheet">
    <script src="~/lib/jquery/dist/jquery.js"></script>
  <script src="~/jquery.fancytree/jquery.fancytree-all-deps.js"></script>
  <script src="~/jquery.fancytree/jquery.fancytree-all.js"></script>
  @*<script src="../src/jquery.fancytree.table.js"></script>*@
  <!-- (Irrelevant source removed.) -->

<script type="text/javascript">
  function createNode(e, ctx) {
    // add fake <input/> to the node
    var $input = $("<input/>").val(ctx.node.title);
    $("span.fancytree-title", ctx.node.li).before($input);
  }

  $(function () {
    var source = [
      { key: "ajax", title: "Successful lazy loading via Ajax", lazy: true },
      { key: "custom", title: "Successful lazy loading via custom source", lazy: true },
      { key: "ajax-error", title: "Ajax error while lazy loading", lazy: true },
      { key: "custom-error", title: "Custom error while lazy loading", lazy: true }
    ];

    function lazyLoad(event, data) {
      switch (data.node.key) {
        case "ajax":
            data.result = { url: "/FolderContents/GetFancyTreeRoot/" /*, debugDelay: 5000*/ };
          //data.result = $.ajax({
          //  url: "https://wwwendt.de/tech/fancytree/demo/ajax-sub2.json",
          //  dataType: "json"
          //  });
          break;
        case "custom":
          data.result = $.Deferred(function (dfd) {
            setTimeout(function () {
              dfd.resolve([
                { title: "Sub item 1" },
                { title: "Sub item 2" }
              ]);
            }, 1000);
          });
          break;
        case "ajax-error":
          data.result = { url: "not-found.json" };
          break;
        case "custom-error":
          data.result = $.Deferred(function (dfd) {
            setTimeout(function () {
              dfd.reject(new Error("TEST ERROR"));
            }, 1000);
          });
          break;
        default:
          data.result = [];
      }
    }

    function loadError(e,data) {
      var error = data.error;
      if (error.status && error.statusText) {
        data.message = "Ajax error: " + data.message;
        data.details = "Ajax error: " + error.statusText + ", status code = " + error.status;
      } else {
        data.message = "Custom error: " + data.message;
        data.details = "An error occurred during loading: " + error;
      }
    }

    $("#tree1").fancytree({
      source: source,
      ajax: { debugDelay: 1000 },
      lazyLoad: lazyLoad
    });

    $("#tree2").fancytree({
      source: source,
      ajax: { debugDelay: 1000 },
      lazyLoad: lazyLoad,
      loadError: loadError
    });

    $("#table1").fancytree({
      source: source,
      ajax: { debugDelay: 1000 },
      lazyLoad: lazyLoad,
      extensions: ["table"]
    });

    $("#table2").fancytree({
      source: source,
      ajax: { debugDelay: 1000 },
      lazyLoad: lazyLoad,
      loadError: loadError,
      extensions: ["table"]
    });
  });
</script>


 <h1>Example: lazy load errors handling</h1>
  <!-- (Irrelevant source removed.) -->

  <div>
    <label>No 'loadError' handler:</label>
    <div id="tree1"></div>
  </div>
  <br/>

  <div>
    <label>'loadError' handler is specified:</label>
    <div id="tree2"></div>
  </div>
  <br/>

  <div>
    <label>No 'loadError' handler (table extension):</label>
    <table id="table1" style="width:100%">
      <thead style="display: none"><tr><th></th></tr>
      </thead>
      <tbody></tbody>
    </table>
  </div>
  <br/>

  <div>
    <label>'loadError' handler is specified (table extension):</label>
    <table id="table2" style="width:100%">
      <thead style="display: none"><tr><th></th></tr>
      </thead>
      <tbody></tbody>
    </table>
  </div>
